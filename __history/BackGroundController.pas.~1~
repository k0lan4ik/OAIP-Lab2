unit BackGroundController;

interface
uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs;

type
  TFigure = class
    public
    Xpoint1: integer;
    Ypoint1: integer;
    Xpoint2: integer;
    Ypoint2: integer;
    Canvas: TCanvas;
    constructor Create(const x1, y1, x2, y2:integer; Canvas:Tcanvas);
    private
  end;

  TRectangle = class(TFigure)
  public
    procedure Draw(PenColor, FillColor:Tcolor);
  private
  end;

  TEllipse = class(TFigure)
  public
    procedure Draw(PenColor, FillColor:Tcolor);
  private
  end;

  TLine = class(TFigure)
  public
    procedure Draw(PenColor, FillColor:Tcolor);
  private
  end;

implementation
   constructor TFigure.Create(const X1, Y1, X2, Y2:integer; Canvas:Tcanvas);
   begin
     Xpoint1:=X1;
     Ypoint1:=Y1;
     Xpoint2:=X2;
     Ypoint2:=Y2;
     Self.Canvas:=Canvas;
   end;

   procedure TRectangle.Draw(PenColor, FillColor:Tcolor);
   begin
     Canvas.Pen.Color:=PenColor;
     Canvas.Pen.Width := 3;
     Canvas.Brush.Color:=FillColor;
     Canvas.Rectangle(Xpoint1, Ypoint1, Xpoint2, Ypoint2);
   end;

   procedure TEllipse.Draw(PenColor, FillColor:Tcolor);
   begin
     Canvas.Pen.Color:=PenColor;
     Canvas.Pen.Width := 3;
     Canvas.Brush.Color:=FillColor;
     Canvas.Ellipse(Xpoint1, Ypoint1, Xpoint2, Ypoint2);
   end;

   procedure TLine.Draw(PenColor, FillColor:Tcolor);
   begin
     Canvas.Pen.Color:=PenColor;
     Canvas.Pen.Width := 3;
     Canvas.Brush.Color:=FillColor;
     Canvas.MoveTo(Xpoint1, Ypoint1);
     Canvas.LineTo(Xpoint2, Ypoint2);
   end;
end.
